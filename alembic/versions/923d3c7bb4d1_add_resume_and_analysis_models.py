"""Add resume and analysis models

Revision ID: 923d3c7bb4d1
Revises: 67c6976fe9c3
Create Date: 2025-10-14 17:49:24.368538

"""
from typing import Sequence, Union

import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

from alembic import op

# revision identifiers, used by Alembic.
revision: str = '923d3c7bb4d1'
down_revision: Union[str, None] = '67c6976fe9c3'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('resumes',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('file_name', sa.String(length=255), nullable=False),
    sa.Column('file_path', sa.String(length=512), nullable=False),
    sa.Column('file_type', sa.String(length=10), nullable=False),
    sa.Column('file_size', sa.Integer(), nullable=False),
    sa.Column('parsed_text', sa.Text(), nullable=True),
    sa.Column('parsed_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_resumes_id'), 'resumes', ['id'], unique=True)
    op.create_index(op.f('ix_resumes_user_id'), 'resumes', ['user_id'], unique=False)
    op.create_table('resume_analyses',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('resume_id', sa.UUID(), nullable=False),
    sa.Column('job_description', sa.Text(), nullable=False),
    sa.Column('job_title', sa.String(length=255), nullable=True),
    sa.Column('company_name', sa.String(length=255), nullable=True),
    sa.Column('match_score', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('ats_score', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('semantic_similarity', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('matching_keywords', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('missing_keywords', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('ats_issues', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('ai_suggestions', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('rewritten_bullets', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('processing_time_ms', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['resume_id'], ['resumes.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_resume_analyses_id'), 'resume_analyses', ['id'], unique=True)
    op.create_index(op.f('ix_resume_analyses_resume_id'), 'resume_analyses', ['resume_id'], unique=False)
    op.create_index(op.f('ix_resume_analyses_user_id'), 'resume_analyses', ['user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_resume_analyses_user_id'), table_name='resume_analyses')
    op.drop_index(op.f('ix_resume_analyses_resume_id'), table_name='resume_analyses')
    op.drop_index(op.f('ix_resume_analyses_id'), table_name='resume_analyses')
    op.drop_table('resume_analyses')
    op.drop_index(op.f('ix_resumes_user_id'), table_name='resumes')
    op.drop_index(op.f('ix_resumes_id'), table_name='resumes')
    op.drop_table('resumes')
    # ### end Alembic commands ###
